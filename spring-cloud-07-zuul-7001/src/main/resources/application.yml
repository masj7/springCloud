server:
  port: 7001 # 服务端口

spring:
  application:
    name: microservice-zuul

eureka:
  client:
    registerWithEureka: true # 服务注册开关
    fetchRegistry: true # 服务发现开关
    serviceUrl: # 客户端(服务提供者)注册到哪一个Eureka Server服务注册中心，多个用逗号分隔
      # 单机版 Eureka 服务注册中心
      #defaultZone: http://localhost:6001/eureka
      # 集群版 Eureka 服务注册中心
      defaultZone: http://eureka6001.com:6001/eureka,http://eureka6002.com:6002/eureka
  instance:
    instanceId: ${spring.application.name}:${server.port}-zuul # 指定实例ID,就不会显示主机名了
    preferIpAddress: true #访问路径可以显示IP地址

# 第一种情况，直接转发到每个 服务
# 地址为：http://localhost:7001/one/product/list?token=1
zuul:
  routes:
    provider-product-8001: # 路由名称，名称任意，路由名称唯一
      path: /one/** # 访问路径
      serviceId: microservice-product-8001 # 指定服务ID，会自动从Eureka中找到此服务的ip和端口
      stripPrefix: true # 代理转发时去掉前缀，false:代理转发时不去掉前缀 例如:为true时请求 /product/get/1，代理转发到/get/1
    # 如果多个服务需要经过路由，则同povider-product方式继续添加，例如：
    provider-product-8002:
      path: /two/**
      serviceId: microservice-product-8002
      stripPrefix: true
    provider-product-8003:
      path: /three/**
      serviceId: microservice-product-8003
      stripPrefix: true


# 第二种方式：转发到 feign ，在由feign转发路由
# 地址为：http://localhost:7001/feign/one/consumer/product/list?token=1
#zuul:
#  routes:
#    provider-product-8001: # 路由名称，名称任意，路由名称唯一
#      path: /feign/** # 访问路径
#      serviceId: microservice-product-80 # 指定服务ID，会自动从Eureka中找到此服务的ip和端口
#      stripPrefix: true # 代理转发时去掉前缀，false:代理转发时不去掉前缀 例如:为true时请求 /product/get/1，代理转发到/get/1
